name: weather-forecast-ml

on:
  push:
    branches:
      - main  # or the branches you're pushing to

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # Set up Python 3.10 environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install required dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools==68.0.0 wheel==0.40.0
          python -m pip install --no-cache-dir -r requirements.txt

      # Install ngrok for tunneling
      - name: Install ngrok
        run: |
          curl -s https://ngrok.com/download | tar xz
          sudo mv ngrok /usr/local/bin

      # Running the ML model (replace 'model.py' with your actual script if needed)
      - name: Train model
        run: |
          python model.py

      # Running the Flask Backend File and starting ngrok tunnel
      - name: Run Flask and Expose with ngrok
        run: |
          # Start Flask app in the background
          python app.py &

          # Start ngrok and expose Flask app
          ngrok http 5000 &

          # Give ngrok a moment to establish the tunnel
          sleep 10

          # Retrieve the ngrok public URL
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r .tunnels[0].public_url)

          # Print the ngrok URL
          echo "Flask is running at: $NGROK_URL"

          # Optional: Save the ngrok URL to use in the next steps
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV

      # Testing your Flask API using ngrok public URL
      - name: Test API
        run: |
          curl ${{ secrets.NGROK_URL }}/predict
          curl ${{ secrets.NGROK_URL }}/compare/Karachi
