name: weather-forecast-ml

on:
  push:
    branches:
      - main

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools==68.0.0 wheel==0.40.0
          python -m pip install --no-cache-dir -r requirements.txt

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Train model
        run: |
          python model.py

      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

      - name: Start Flask app and ngrok tunnel
        run: |
          nohup python app.py > flask.log 2>&1 &
          sleep 10  # Wait for Flask to fully start

          # Add ngrok authtoken from GitHub secrets
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

          # Start ngrok tunnel
          ngrok http 5000 > ngrok.log &
          sleep 10  # Wait for ngrok to initialize

      - name: Get public URL from ngrok
        id: get-ngrok-url
        run: |
          echo "Fetching ngrok public URL..."
          NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "NGROK_URL=$NGROK_URL" >> $GITHUB_ENV
          echo "Public URL is: $NGROK_URL"

      - name: Test Flask API Endpoints
        run: |
          echo "Calling ${{ env.NGROK_URL }}/predict"
          curl -i ${{ env.NGROK_URL }}/predict

          echo "Calling ${{ env.NGROK_URL }}/compare/Karachi"
          curl -i ${{ env.NGROK_URL }}/compare/Karachi

      - name: ZAP Scan on exposed URL
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: ${{ env.NGROK_URL }}
